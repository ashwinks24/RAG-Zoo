# -*- coding: utf-8 -*-
"""test_segment_attributor.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YtA0ZPZATiQBWPVoKuhzdCCBRROQDcAQ
"""

import pytest
from unittest.mock import MagicMock
from rag_src.evaluator.segment_attributor import SegmentAttributor
from llama_index.core.schema import TextNode

@pytest.fixture
def mock_llm():
    llm = MagicMock()
    llm.generate.return_value = "Segment 1\nSegment 2"
    return llm

@pytest.fixture
def sample_docs():
    return [
        TextNode(text="The rocket generates thrust."),
        TextNode(text="Satellites orbit Earth.")
    ]

def test_segment_attributor_locate_segments(mock_llm, sample_docs):
    attributor = SegmentAttributor(llm=mock_llm)
    query = "How do rockets work?"
    response = "Rocket engines generate thrust."

    result = attributor.locate_segments(query, response, sample_docs)

    assert isinstance(result, dict)
    assert "segments" in result
    assert isinstance(result["segments"], str)
    mock_llm.generate.assert_called_once()

def test_segment_attributor_evaluate_compatibility(mock_llm):
    attributor = SegmentAttributor(llm=mock_llm)
    query = "What supports this answer?"
    response = "Satellites orbit Earth."
    contexts = ["Text about rockets.", "More satellite text."]

    result = attributor.evaluate(query, response, contexts)

    assert isinstance(result, dict)
    assert "segments" in result
    mock_llm.generate.assert_called_once()